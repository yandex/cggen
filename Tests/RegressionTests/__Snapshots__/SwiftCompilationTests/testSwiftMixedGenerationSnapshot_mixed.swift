// Generated by cggen

import CoreGraphics
@_spi(Generator) import CGGenRTSupport

typealias Drawing = CGGenRTSupport.Drawing

extension Drawing {
  static let pathsAndImages = Drawing(
    width: 100.0,
    height: 100.0,
    bytecodeArray: mergedBytecodes,
    decompressedSize: 201,
    startIndex: 0,
    endIndex: 80
  )
}


// MARK: - Paths

extension Drawing.Path {
  static let diamond = Drawing.Path(
    bytecodeArray: mergedBytecodes,
    decompressedSize: 201,
    startIndex: 81,
    endIndex: 117
  )
  static let hexagon = Drawing.Path(
    bytecodeArray: mergedBytecodes,
    decompressedSize: 201,
    startIndex: 118,
    endIndex: 172
  )
  static let triangle = Drawing.Path(
    bytecodeArray: mergedBytecodes,
    decompressedSize: 201,
    startIndex: 173,
    endIndex: 200
  )
}

private let mergedBytecodes: [UInt8] = [
  0x62, 0x76, 0x78, 0x6E, 0xC9, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00,
  0x60, 0x01, 0x00, 0xE6, 0x19, 0x00, 0x00, 0x80, 0x3F, 0x00, 0xF9, 0x98,
  0x08, 0x80, 0xBF, 0xEC, 0xC8, 0x42, 0x00, 0x23, 0xFF, 0x00, 0x00, 0x05,
  0x00, 0x00, 0x20, 0x41, 0x18, 0x04, 0x56, 0xF0, 0xEC, 0x17, 0x01, 0x00,
  0x23, 0x00, 0x00, 0xFF, 0x16, 0x00, 0x00, 0x5C, 0x42, 0x38, 0x18, 0xF5,
  0xC8, 0x13, 0x00, 0x00, 0x48, 0xF1, 0xE5, 0x02, 0x00, 0x00, 0xB4, 0x42,
  0x08, 0x0D, 0x58, 0x12, 0x02, 0x48, 0x09, 0xB4, 0x08, 0x2A, 0xE4, 0x48,
  0x42, 0x06, 0x00, 0x18, 0x30, 0x48, 0x25, 0xA0, 0x98, 0x09, 0x8C, 0x42,
  0xF1, 0x30, 0x2E, 0x10, 0x12, 0x08, 0x09, 0x10, 0x24, 0x38, 0x37, 0xF4,
  0x38, 0x5C, 0xF3, 0x30, 0x1C, 0xE3, 0xA0, 0x42, 0x06, 0x06, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x62, 0x76, 0x78, 0x24
]
